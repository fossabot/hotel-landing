include ../select-option/select-option
include ../button/button

mixin dropdown({label='dropdown', placeholder='Open', items=[], hasButtons=false, status='', defaults=''}={})
    -const inputOpenClass = status === 'expanded' ? ' dropdown__input_open': ''
    -const optionsOpenClass = status === 'expanded' ? ' dropdown__options_open': ''
    .dropdown(class=attributes.class data-values=defaults)
        p.dropdown__labels
            span.text-input__label=label
            if status
                span.text-input__status=status
        div(class=`dropdown__input${inputOpenClass}`)
            p.dropdown__content.dropdown__content_placeholder= placeholder
            i.material-icons.dropdown__arrow keyboard_arrow_down
        div(class=`dropdown__options${optionsOpenClass}`)
            for item in items
                .dropdown__option
                    +select-option({name: item.name, label: item.label})
            if hasButtons
                .dropdown__buttons
                    .dropdown__clear.dropdown__clear_disabled
                        +button({text: 'очистить', type: 'text'})&attributes({class: 'dropdown__clear-btn js-clear'})
                    .dropdown__apply
                        +button({text: 'применить', type: 'text'})&attributes({class: 'js-apply'})
